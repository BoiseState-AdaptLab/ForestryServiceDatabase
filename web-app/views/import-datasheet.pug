extends layout

mixin transect(transect_no)

    //TODO: maybe don't show this and just keep as behind the scenes field
    label(for='transect_no') Transect Number
    input(type='number' id='transect_no' name='transect_no' min=1 max=3 step=1 value=transect_no readonly)

    -var dyn_name = "location_" + transect_no;
    label(for=dyn_name) Location
    input(type='text' id=dyn_name name=dyn_name)

    - dyn_name = "elevation_" + transect_no;
    label(for=dyn_name) Elevation
    input(type='number' id=dyn_name name=dyn_name min=0 step=1)

    - dyn_name = "slope_" + transect_no;
    label(for=dyn_name) Slope
    input(type='number' id=dyn_name name=dyn_name)

    - dyn_name = "type_des_" + transect_no;
    label(for=dyn_name) Type Designation
    input(type='text' id=dyn_name name=dyn_name)

    - dyn_name = "aspect_" + transect_no;
    label(for=dyn_name) Aspect
    input(type='text' id=dyn_name name=dyn_name)

mixin biomass_row(transect_no, species_no)

    - var dyn_name = transect_no + '_' + species_no + '_name';
    label(for=dyn_name) Species #{species_no} Name
    input(type='text' id=dyn_name name=dyn_name)

    - dyn_name = transect_no + '_' + species_no + '_type';
    label(for=dyn_name) Species #{species_no} Type
    select(id=dyn_name name=dyn_name)
        option(value='grass') Grass
        option(value='forbs') Forbs
        option(value='browse') Browse

    div
    - var i = 1;
    while i <= 10
        - dyn_name = transect_no + '_' + species_no + '_' + i + '_gw';
        input(type='number' name=dyn_name min=0 step=1)
        - i = i + 1;

mixin coverage_row(transect_no, metric_name, metric_name_pretty)
    div
    // label the first one
    - var dyn_name = metric_name + '_' + transect_no + '_' + 1;
    label(for=dyn_name) #{metric_name_pretty}
    input(type='number' id=dyn_name name=dyn_name min=0 step=1 max=100)

    - var i = 2;
    while i <= 10
        - dyn_name = metric_name + '_' + transect_no + '_' + i;
        input(type='number' name=dyn_name min=0 step=1 max=100)
        - i = i + 1;

mixin biomass_row_summary(row_number)

    div
    -var dyn_name = "species_" + row_number;
    label(for=dyn_name) Species #{row_number}
    input(type='text' id=dyn_name name=dyn_name)

    -dyn_name = 't1_val_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 't2_val_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 't3_val_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 't1_val_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 'total_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 'dry_weight_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 'prod_dry_weight_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 'composition' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 'd_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 'i_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

    -dyn_name = 'l_' + row_number;
    input(type='number' name=dyn_name min=0 step=1)

mixin coverage_row_summary(metric_name, metric_name_pretty)

    div
    -var dyn_name = metric_name + '_t1';
    label(for=dyn_name) #{metric_name_pretty}
    input(type='number' id=dyn_name name=dyn_name min=0 step=1 max=100)

    - dyn_name = metric_name + '_t2';
    input(type='number' name=dyn_name min=0 step=1 max=100)

    - dyn_name = metric_name + '_t3';
    input(type='number' name=dyn_name min=0 step=1 max=100)

    - dyn_name = metric_name + '_tot';
    input(type='number' name=dyn_name min=0 step=1 max=100)

    - dyn_name = metric_name + '_avg';
    input(type='number' name=dyn_name min=0 step=1 max=100)

block variables
    script.
        transect1 = "#{transect1}";
        transect2 = "#{transect2}";
        transect3 = "#{transect3}";
        numSpeciesSummary = "#{numSpeciesSummary}";
        numSpeciesT1 = "#{numSpeciesT1}";
        numSpeciesT2 = "#{numSpeciesT2}";
        numSpeciesT3 = "#{numSpeciesT3}";

block content

    div(class='header')
        h1=title

    div(class='body')
        form(action='/import-datasheet' method='post')
            //TODO: enforce required fields

            // ----------------------- Report Data ----------------------- //

            div(class='report-segment button-container first-button-container')
                h2 Report Data

            div(class='button-container')

                label(for='writeup_no') Writeup Number
                input(type='text' id='writeup_no' name='writeup_no')

                label(for='photo_no') Photo Number
                input(type='text' id='photo_no' name='photo_no')

                div

                label(for='forest') Forest
                select(id='forest' name='forest')
                    option(value='sawtooth') Sawtooth
                    //add more options as necessary

                label(for='ranger_dist') Ranger District
                select(id='ranger_dist' name='ranger_dist')
                    option(value='sawtooth') Sawtooth
                    //add more options as necessary

                label(for='allotment') Allotment
                input(type='text' id='allotment' name='allotment')

                label(for='examiner') Examiner
                input(type='text' id='examiner' name='examiner')

                label(for='date') Date
                input(type='date' id='date' name='date')

                div

                label(for='transect_nos') Transect Numbers
                input(type='text' id='transect_nos' name='transect_nos')

                //TODO: add plot size and plot interval to sql report table
                label(for='plot_size') Plot Size
                input(type='number' id='plot_size' name='plot_size' min=0 step=0.1)

                label(for='plot_interval') Plot Interval
                input(type='number' id='plot_interval' name='plot_interval' min=0 step=0.1)

                label(for='type_des') Type Designation
                input(type='text' id='type_des' name='type_des')

                label(for='type_des_trend') Type Designation Trend
                select(id='type_des_trend' name='type_des_trend')
                    option(value='rising') Rising
                    option(value='falling') Falling
                    option(value='stable') Stable

                label(for='livestock') Livestock Type
                select(id='livestock' name='livestock')
                    option(value='sheep') Sheep
                    option(value='cows') Cows
                    //add more options as necessary

                label(for='slope') Slope
                input(type='number' id='slope' name='slope' min=0 max=90 step=1)

                label(for='aspect') Aspect
                input(type='text' id='aspect' name='aspect')

                div

                label(for='location') Location
                input(type='text' id='location' name='location')

                label(for='elevation_min') Elevation Min
                input(type='number' id='elevation_min' name='elevation_min' min=0 step=1)

                label(for='elevation_max') Elevation Max
                input(type='number' id='elevation_max' name='elevation_max' min=0 step=1)

                div

                label(for='grass_tot') Total Grass
                input(type='number' id='grass_tot' name='grass_tot' min=0 step=1)

                label(for='forbes_tot') Total Forbes
                input(type='number' id='forbes_tot' name='forbes_tot' min=0 step=1)

                label(for='browse_tot') Total Browse
                input(type='number' id='browse_tot' name='browse_tot' min=0 step=1)

                label(for='desireable_sum') Desireable Sum
                input(type='number' id='desireable_sum' name='desireable_sum' min=0 step=1)

                label(for='intermediate_sum') Intermediate Sum
                input(type='number' id='intermediate_sum' name='intermediate_sum' min=0 step=1)

                label(for='l_desireable_sum') Least Desireable Sum
                input(type='number' id='l_desireable_sum' name='l_desireable_sum' min=0 step=1)

                div

                //TODO: three fields below not in sql init script
                label(for='desireable_perc') Desireable Percentage
                input(type='number' id='desireable_perc' name='desireable_perc' min=0 step=1 max=100)

                label(for='intermediate_perc') Intermediate Percentage
                input(type='number' id='intermediate_perc' name='intermediate_perc' min=0 step=1)

                label(for='l_desireable_perc') Least Desireable Percentage
                input(type='number' id='l_desireable_perc' name='l_desireable_perc' min=0 step=1)

                div
                p(class='metric-label') Condition Rating:

                label(for='composition') Composition Rating
                input(type='number' id='composition' name='composition' min=0 step=1)

                label(for='production') Production Rating
                input(type='number' id='production' name='production' min=0 step=1)

                label(for='forage_condition') Forage Condition Rating
                input(type='number' id='forage_condition' name='forage_condition' min=0 step=1)

                label(for='ground_cover') Ground Cover Index
                input(type='number' id='ground_cover' name='ground_cover' min=0 step=1)

                label(for='erosion') Current Erosion Index
                input(type='number' id='erosion' name='erosion' min=0 step=1)

                label(for='soil_condition') Soil Condition Rating
                input(type='number' id='soil_condition' name='soil_condition' min=0 step=1)

                label(for='browse_condition') Browse Condition
                input(type='text' id='browse_condition')

                label(for='apparent_trend') Apparent Trend
                select(id='apparent_trend' name='apparent_trend')
                    option(value='rising') Rising
                    option(value='falling') Falling
                    option(value='stable') Stable

                label(for='additional_notes') Any Additional Notes?
                input(type='text' id='additional_notes' name='additional_notes')


            // ----------------------- Coverage Summary Data ----------------------- //

            div(class='report-segment button-container')
                h2 Coverage Summary Data

            div(class='button-container')

                //TODO: add css to straighten out the columns of fields

                +coverage_row_summary('overstory_trees', 'Overstory (Trees)')
                +coverage_row_summary('overstory_shrubs', 'Overstory (Shrubs)')
                +coverage_row_summary('crown_cover', 'Crown Cover (Herb.)')
                +coverage_row_summary('bare_ground', 'Bare Ground')
                +coverage_row_summary('rock_pav_nat', 'Rock & Pav (Nat.)')
                +coverage_row_summary('rock_pav_unnat', 'Rock & Pav (Unnat.)')
                +coverage_row_summary('veg_litter', 'Veg. & Litter')
                +coverage_row_summary('solid_disturbance', 'Solid Disturbance')
                +coverage_row_summary('avg_droppings', 'Av. No. Droppings')
                +coverage_row_summary('avg_pellet_groups', 'Av. No. Pellet Groups')


            // ----------------------- Biomass Summary Data ----------------------- //

            div(class='report-segment button-container')
                h2 Biomass Summary Data

            div(class='button-container')

                - var i = 1;
                while i <= numSpeciesSummary
                    +biomass_row_summary(i)
                    - i=i+1;


            // ----------------------- Soil Summary Data ----------------------- //

            div(class='report-segment button-container')
                h2 Soil Summary Data

            div(class='button-container')

                //TODO: update css to align inputs instead of floating (i.e. 4 per container or something)
                p(class='metric-label') Soil:

                label(for='surf_texture') Surface Texture
                input(type='text' id='surf_texture' name='surf_texture')

                label(for='surf_thick') Surface Texture Thickness
                input(type='number' id='surf_thick' name='surf_thick')

                label(for='surf_ph') Surface Texture pH
                input(type='number' id='surf_ph' name='surf_ph' step=0.1 min=0 max=14)

                label(for='subsoil_texture') Subsoil Texture
                    input(type='text' id='subsoil_texture' name='subsoil_texture')

                label(for='subsoil_thick') Subsoil Texture Thickness
                    input(type='number' id='subsoil_thick' name='subsoil_thick')

                label(for='subsoil_ph') Subsoil Texture pH
                    input(type='number' id='subsoil_ph' name='subsoil_ph' step=0.1 min=0 max=14)

                label(for='substrat_mat') Substratum Material
                    input(type='text' id='substrat_mat' name='substrat_mat')

                label(for='eff_root_depth') Effective Rooting Depth
                    input(type='text' id='eff_root_depth' name='eff_root_depth')

                label(for='soil_remarks') Soil Remarks
                    input(type='text' id='soil_remarks' name='soil_remarks')

                p(class='metric-label') Erosion Pattern:

                label(for='avg_surf_loss') Average Surface Loss
                    input(type='number' id='avg_surf_loss' name='avg_surf_loss' step=0.01 min=0)

                label(for='area_surf_loss') Surface Loss Over Area (Percentage)
                    input(type='number' id='area_surf_loss' name='area_surf_loss' min=0 max=1000 step=1)

                label(for='gull_len') Gullies Length
                    input(type='number' id='gull_len' name='gull_len' step=0.01 min=0)

                label(for='gull_depth') Gullies Depth
                    input(type='number' id='gull_depth' name='gull_depth' step=0.01 min=0)

                label(for='erosion_remarks') Erosion Remarks
                    input(type='text' id='erosion_remarks' name='erosion_remarks')

                p(class='metric-label') Inherent Erosion Hazard:

                label(for='detach') Detachability
                    input(type='number ' id='detach' name='detach' min=0 step=1)

                label(for='rock_coverage') Rock Coverage %
                    input(type='number' id='rock_coverage' name='rock_coverage' min=0 step=1 max=100)

                label(for='adj_detach') Adjusted Detachability Rating
                    input(type='number' id='adj_detach' name='adj_detach' step=0.01 min=0)

                label(for='perm') Permeability
                    input(type='number' id='perm' name='perm' min=0 step=1)

                label(for='erod_index') Erodibility Index
                    input(type='number' id='erod_index' name='erod_index' step=0.01 min=0)

                label(for='erod_ind_class') Erodibility Index Class
                    input(type='text' id='erod_ind_class' name='erod_ind_class')

                label(for='erod_slope') Slope %
                    input(type='number' id='erod_slope' name='erod_slope' min=0 step=1 max=100)

                label(for='erod_haz_class') Erosion Hazard Class
                    input(type='text' id='erod_haz_class' name='erod_haz_class')

                p(class='metric-label') Soil Disturbance:

                label(for='compaction') Compaction
                select(id='compaction' name='compaction')
                    option(value='none') None
                    option(value='light') Light
                    option(value='moderate') Moderate
                    option(value='heavy') Heavy

                label(for='displacement') Displacement
                select(id='displacement' name='displacement')
                    option(value='none') None
                    option(value='light') Light
                    option(value='moderate') Moderate
                    option(value='heavy') Heavy

                p(class='metric-label') Cover Dispersion:

                label(for='cov_disp') Cover Dispersion
                select(id='cov_disp' name='cov_disp')
                    option(value='uniform') Uniform
                    option(value='fairly_uniform') Fairly Uniform
                    option(value='variable') Variable
                    option(value='highly_variable') Highly Variable

                label(for='potential_prod') Potential Product
                    input(type='number' id='potential_prod' name='potential_prod')

                label(for='sust_reasons') Suitability Reasons
                    input(type='text' id='sust_reasons' name='sust_reasons')


            // ----------------------- Transect Data ----------------------- //
            if transect1

                div(class='report-segment button-container')
                    h2 Transect 1 Data

                div(class='button-container')

                    +transect(1)
                    -var i = 1;
                    while i <= numSpeciesT1
                        div
                        p(class='metric-label') Species #{i}
                        +biomass_row(1,i)
                        -i=i+1;

                    +coverage_row(1, 'overstory_trees', 'Overstory (Trees)')
                    +coverage_row(1, 'overstory_shrubs', 'Overstory (Shrubs)')
                    +coverage_row(1, 'crown_cover', 'Crown Cover (Herb.)')
                    +coverage_row(1, 'bare_ground', 'Bare Ground')
                    +coverage_row(1, 'rock_pav_nat', 'Rock & Pav (Nat.)')
                    +coverage_row(1, 'rock_pav_unnat', 'Rock & Pav (Unnat.)')
                    +coverage_row(1, 'veg_litter', 'Veg. & Litter')
                    +coverage_row(1, 'solid_disturbance', 'Solid Disturbance')
                    +coverage_row(1, 'avg_droppings', 'Av. No. Droppings')
                    +coverage_row(1, 'avg_pellet_groups', 'Av. No. Pellet Groups')

            if transect2

                div(class='report-segment button-container')
                    h2 Transect 2 Data

                div(class='button-container')

                    +transect(2)
                    -var i = 1;
                    while i <= numSpeciesT2
                        div
                        p(class='metric-label') Species #{i}
                        +biomass_row(2, i)
                        -i=i+1;

                    +coverage_row(2, 'overstory_trees', 'Overstory (Trees)')
                    +coverage_row(2, 'overstory_shrubs', 'Overstory (Shrubs)')
                    +coverage_row(2, 'crown_cover', 'Crown Cover (Herb.)')
                    +coverage_row(2, 'bare_ground', 'Bare Ground')
                    +coverage_row(2, 'rock_pav_nat', 'Rock & Pav (Nat.)')
                    +coverage_row(2, 'rock_pav_unnat', 'Rock & Pav (Unnat.)')
                    +coverage_row(2, 'veg_litter', 'Veg. & Litter')
                    +coverage_row(2, 'solid_disturbance', 'Solid Disturbance')
                    +coverage_row(2, 'avg_droppings', 'Av. No. Droppings')
                    +coverage_row(2, 'avg_pellet_groups', 'Av. No. Pellet Groups')

            if transect3

                div(class='report-segment button-container')
                    h2 Transect 3 Data

                div(class='button-container')

                    +transect(3)
                    -var i = 1;
                    while i <= numSpeciesT3
                        div
                        p(class='metric-label') Species #{i}
                        +biomass_row(3, i)
                        -i=i+1;

                    +coverage_row(3, 'overstory_trees', 'Overstory (Trees)')
                    +coverage_row(3, 'overstory_shrubs', 'Overstory (Shrubs)')
                    +coverage_row(3, 'crown_cover', 'Crown Cover (Herb.)')
                    +coverage_row(3, 'bare_ground', 'Bare Ground')
                    +coverage_row(3, 'rock_pav_nat', 'Rock & Pav (Nat.)')
                    +coverage_row(3, 'rock_pav_unnat', 'Rock & Pav (Unnat.)')
                    +coverage_row(3, 'veg_litter', 'Veg. & Litter')
                    +coverage_row(3, 'solid_disturbance', 'Solid Disturbance')
                    +coverage_row(3, 'avg_droppings', 'Av. No. Droppings')
                    +coverage_row(3, 'avg_pellet_groups', 'Av. No. Pellet Groups')

            button(type='submit' value='submit') Submit Datasheet